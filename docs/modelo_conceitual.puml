@startuml

class Usuário {
  - id: int
  - nome: string
  - email: string
  + logIn(): void
  + logOut(): void
}

class Freelancer {
  - skills: string[]
  - reputação: int
  - portfolio: string
  + enviarProposta(vaga: Vaga, valor: float): void
}

class Empresa {
  - vagas_abertas: Vaga[]
  + criarVaga(titulo: string, descricao: string, remuneracao: float): Vaga
}

class Administrador {
  + gerenciarUsuários(): void
}

class Vaga {
  - id: int
  - titulo: string
  - descricao: string
  - remuneração: float
  + fecharVaga(): void
  + receberProposta(proposta: Proposta): void
}

class Proposta {
  - id: int
  - freelancer: Freelancer
  - vaga: Vaga
  - valor: float
  - status: string
  + aceitarProposta(): void
}

class Projeto {
  - id: int
  - nome: string
  - empresa: Empresa
  + adicionarMembro(usuario: Usuário): void
}

class Pagamento {
  - id: int
  - valor: float
  - tipo: string
  - status: string
  - projeto: Projeto
  + efetuarPagamento(): void
}

class Mensagem {
  - id: int
  - texto: string
  - remetente: Usuário
  - destinatário: Usuário
  + enviarMensagem(destinatario: Usuário, texto: string): void
}

class Feedback {
  - avaliação: int
  - comentário: string
  - usuário: Usuário
  + deixarFeedback(avaliacao: int, comentario: string): void
}

Usuário <|-- Administrador
Usuário <|-- Empresa
Usuário <|-- Freelancer


Freelancer --> Proposta: Faz Proposta
Empresa --> Proposta: Recebe Proposta
Freelancer --> Projeto: Participa em
Empresa --> Projeto: Inicia
Administrador -- Usuário: Gerencia
Projeto -- Pagamento: Realiza Pagamento
Projeto -- Feedback: Recebe Feedback
Mensagem -- Usuário: Envia Mensagem
Vaga "1" -- "0..*" Proposta: Tem Propostas

@enduml